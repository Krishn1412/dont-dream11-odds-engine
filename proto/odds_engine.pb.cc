// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: odds_engine.proto
// Protobuf C++ Version: 5.29.3

#include "odds_engine.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace odds {

inline constexpr OddsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : winprobability_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OddsResponse::OddsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OddsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OddsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OddsResponseDefaultTypeInternal() {}
  union {
    OddsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OddsResponseDefaultTypeInternal _OddsResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR MatchStateRequest_BowlerImpactEntry_DoNotUse::MatchStateRequest_BowlerImpactEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : MatchStateRequest_BowlerImpactEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : MatchStateRequest_BowlerImpactEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct MatchStateRequest_BowlerImpactEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatchStateRequest_BowlerImpactEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatchStateRequest_BowlerImpactEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MatchStateRequest_BowlerImpactEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatchStateRequest_BowlerImpactEntry_DoNotUseDefaultTypeInternal _MatchStateRequest_BowlerImpactEntry_DoNotUse_default_instance_;

inline constexpr BetRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : userid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stake_{0},
        odds_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BetRequest::BetRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BetRequestDefaultTypeInternal() {}
  union {
    BetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BetRequestDefaultTypeInternal _BetRequest_default_instance_;

inline constexpr MatchStateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : recentruns_{},
        _recentruns_cached_byte_size_{0},
        bowlerimpact_{},
        innings_{0},
        targetscore_{0},
        currentscore_{0},
        wicketsleft_{0},
        pitchmodifier_{0},
        ballsremaining_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MatchStateRequest::MatchStateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MatchStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatchStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatchStateRequestDefaultTypeInternal() {}
  union {
    MatchStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatchStateRequestDefaultTypeInternal _MatchStateRequest_default_instance_;
}  // namespace odds
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_odds_5fengine_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_odds_5fengine_2eproto = nullptr;
const ::uint32_t
    TableStruct_odds_5fengine_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest_BowlerImpactEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _impl_.innings_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _impl_.targetscore_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _impl_.currentscore_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _impl_.wicketsleft_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _impl_.ballsremaining_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _impl_.recentruns_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _impl_.bowlerimpact_),
        PROTOBUF_FIELD_OFFSET(::odds::MatchStateRequest, _impl_.pitchmodifier_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::odds::OddsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::odds::OddsResponse, _impl_.winprobability_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::odds::BetRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::odds::BetRequest, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::odds::BetRequest, _impl_.stake_),
        PROTOBUF_FIELD_OFFSET(::odds::BetRequest, _impl_.odds_),
        PROTOBUF_FIELD_OFFSET(::odds::BetRequest, _impl_.market_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::odds::MatchStateRequest_BowlerImpactEntry_DoNotUse)},
        {12, -1, -1, sizeof(::odds::MatchStateRequest)},
        {28, -1, -1, sizeof(::odds::OddsResponse)},
        {37, -1, -1, sizeof(::odds::BetRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::odds::_MatchStateRequest_BowlerImpactEntry_DoNotUse_default_instance_._instance,
    &::odds::_MatchStateRequest_default_instance_._instance,
    &::odds::_OddsResponse_default_instance_._instance,
    &::odds::_BetRequest_default_instance_._instance,
};
const char descriptor_table_protodef_odds_5fengine_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021odds_engine.proto\022\004odds\"\235\002\n\021MatchState"
    "Request\022\017\n\007innings\030\001 \001(\005\022\023\n\013targetScore\030"
    "\002 \001(\005\022\024\n\014currentScore\030\003 \001(\005\022\023\n\013wicketsLe"
    "ft\030\004 \001(\005\022\026\n\016ballsRemaining\030\005 \001(\005\022\022\n\nrece"
    "ntRuns\030\006 \003(\005\022\?\n\014bowlerImpact\030\007 \003(\0132).odd"
    "s.MatchStateRequest.BowlerImpactEntry\022\025\n"
    "\rpitchModifier\030\010 \001(\001\0323\n\021BowlerImpactEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\"&\n\014Odd"
    "sResponse\022\026\n\016winProbability\030\001 \001(\001\"I\n\nBet"
    "Request\022\016\n\006userId\030\001 \001(\t\022\r\n\005stake\030\002 \001(\001\022\014"
    "\n\004odds\030\003 \001(\001\022\016\n\006market\030\004 \001(\t2\177\n\nOddsEngi"
    "ne\022\?\n\020UpdateMatchState\022\027.odds.MatchState"
    "Request\032\022.odds.OddsResponse\0220\n\010PlaceBet\022"
    "\020.odds.BetRequest\032\022.odds.OddsResponseb\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_odds_5fengine_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_odds_5fengine_2eproto = {
    false,
    false,
    565,
    descriptor_table_protodef_odds_5fengine_2eproto,
    "odds_engine.proto",
    &descriptor_table_odds_5fengine_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_odds_5fengine_2eproto::offsets,
    file_level_enum_descriptors_odds_5fengine_2eproto,
    file_level_service_descriptors_odds_5fengine_2eproto,
};
namespace odds {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              MatchStateRequest_BowlerImpactEntry_DoNotUse::MatchStateRequest_BowlerImpactEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              MatchStateRequest_BowlerImpactEntry_DoNotUse::MatchStateRequest_BowlerImpactEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              MatchStateRequest_BowlerImpactEntry_DoNotUse::MatchStateRequest_BowlerImpactEntry_DoNotUse() : SuperType() {}
              MatchStateRequest_BowlerImpactEntry_DoNotUse::MatchStateRequest_BowlerImpactEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* MatchStateRequest_BowlerImpactEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) MatchStateRequest_BowlerImpactEntry_DoNotUse(arena);
              }
              constexpr auto MatchStateRequest_BowlerImpactEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MatchStateRequest_BowlerImpactEntry_DoNotUse),
                                                          alignof(MatchStateRequest_BowlerImpactEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull MatchStateRequest_BowlerImpactEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_MatchStateRequest_BowlerImpactEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &MatchStateRequest_BowlerImpactEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<MatchStateRequest_BowlerImpactEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &MatchStateRequest_BowlerImpactEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &MatchStateRequest_BowlerImpactEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &MatchStateRequest_BowlerImpactEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_odds_5fengine_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* MatchStateRequest_BowlerImpactEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2> MatchStateRequest_BowlerImpactEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odds::MatchStateRequest_BowlerImpactEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest_BowlerImpactEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\50\3\0\0\0\0\0\0"
    "odds.MatchStateRequest.BowlerImpactEntry"
    "key"
  }},
};

// ===================================================================

class MatchStateRequest::_Internal {
 public:
};

MatchStateRequest::MatchStateRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odds.MatchStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE MatchStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::odds::MatchStateRequest& from_msg)
      : recentruns_{visibility, arena, from.recentruns_},
        _recentruns_cached_byte_size_{0},
        bowlerimpact_{visibility, arena, from.bowlerimpact_},
        _cached_size_{0} {}

MatchStateRequest::MatchStateRequest(
    ::google::protobuf::Arena* arena,
    const MatchStateRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MatchStateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, innings_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, innings_),
           offsetof(Impl_, ballsremaining_) -
               offsetof(Impl_, innings_) +
               sizeof(Impl_::ballsremaining_));

  // @@protoc_insertion_point(copy_constructor:odds.MatchStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE MatchStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : recentruns_{visibility, arena},
        _recentruns_cached_byte_size_{0},
        bowlerimpact_{visibility, arena},
        _cached_size_{0} {}

inline void MatchStateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, innings_),
           0,
           offsetof(Impl_, ballsremaining_) -
               offsetof(Impl_, innings_) +
               sizeof(Impl_::ballsremaining_));
}
MatchStateRequest::~MatchStateRequest() {
  // @@protoc_insertion_point(destructor:odds.MatchStateRequest)
  SharedDtor(*this);
}
inline void MatchStateRequest::SharedDtor(MessageLite& self) {
  MatchStateRequest& this_ = static_cast<MatchStateRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MatchStateRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MatchStateRequest(arena);
}
constexpr auto MatchStateRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.recentruns_) +
          decltype(MatchStateRequest::_impl_.recentruns_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.bowlerimpact_) +
          decltype(MatchStateRequest::_impl_.bowlerimpact_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.bowlerimpact_) +
          decltype(MatchStateRequest::_impl_.bowlerimpact_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MatchStateRequest), alignof(MatchStateRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MatchStateRequest::PlacementNew_,
                                 sizeof(MatchStateRequest),
                                 alignof(MatchStateRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MatchStateRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MatchStateRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MatchStateRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MatchStateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MatchStateRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MatchStateRequest>(), &MatchStateRequest::ByteSizeLong,
            &MatchStateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_._cached_size_),
        false,
    },
    &MatchStateRequest::kDescriptorMethods,
    &descriptor_table_odds_5fengine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MatchStateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 51, 2> MatchStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odds::MatchStateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double pitchModifier = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.pitchmodifier_)}},
    // int32 innings = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatchStateRequest, _impl_.innings_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.innings_)}},
    // int32 targetScore = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatchStateRequest, _impl_.targetscore_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.targetscore_)}},
    // int32 currentScore = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatchStateRequest, _impl_.currentscore_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.currentscore_)}},
    // int32 wicketsLeft = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatchStateRequest, _impl_.wicketsleft_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.wicketsleft_)}},
    // int32 ballsRemaining = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MatchStateRequest, _impl_.ballsremaining_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.ballsremaining_)}},
    // repeated int32 recentRuns = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.recentruns_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 innings = 1;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.innings_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 targetScore = 2;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.targetscore_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 currentScore = 3;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.currentscore_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 wicketsLeft = 4;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.wicketsleft_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 ballsRemaining = 5;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.ballsremaining_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int32 recentRuns = 6;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.recentruns_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // map<string, double> bowlerImpact = 7;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.bowlerimpact_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // double pitchModifier = 8;
    {PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.pitchmodifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(MatchStateRequest()._impl_.bowlerimpact_)>(
        1, 0, 0, 9,
        1)},
  }}, {{
    "\26\0\0\0\0\0\0\14\0\0\0\0\0\0\0\0"
    "odds.MatchStateRequest"
    "bowlerImpact"
  }},
};

PROTOBUF_NOINLINE void MatchStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:odds.MatchStateRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recentruns_.Clear();
  _impl_.bowlerimpact_.Clear();
  ::memset(&_impl_.innings_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ballsremaining_) -
      reinterpret_cast<char*>(&_impl_.innings_)) + sizeof(_impl_.ballsremaining_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MatchStateRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MatchStateRequest& this_ = static_cast<const MatchStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MatchStateRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MatchStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:odds.MatchStateRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 innings = 1;
          if (this_._internal_innings() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_innings(), target);
          }

          // int32 targetScore = 2;
          if (this_._internal_targetscore() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_targetscore(), target);
          }

          // int32 currentScore = 3;
          if (this_._internal_currentscore() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_currentscore(), target);
          }

          // int32 wicketsLeft = 4;
          if (this_._internal_wicketsleft() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_wicketsleft(), target);
          }

          // int32 ballsRemaining = 5;
          if (this_._internal_ballsremaining() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_ballsremaining(), target);
          }

          // repeated int32 recentRuns = 6;
          {
            int byte_size = this_._impl_._recentruns_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt32Packed(
                  6, this_._internal_recentruns(), byte_size, target);
            }
          }

          // map<string, double> bowlerImpact = 7;
          if (!this_._internal_bowlerimpact().empty()) {
            using MapType = ::google::protobuf::Map<std::string, double>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_DOUBLE>;
            const auto& field = this_._internal_bowlerimpact();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "odds.MatchStateRequest.bowlerImpact");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "odds.MatchStateRequest.bowlerImpact");
              }
            }
          }

          // double pitchModifier = 8;
          if (::absl::bit_cast<::uint64_t>(this_._internal_pitchmodifier()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                8, this_._internal_pitchmodifier(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:odds.MatchStateRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MatchStateRequest::ByteSizeLong(const MessageLite& base) {
          const MatchStateRequest& this_ = static_cast<const MatchStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MatchStateRequest::ByteSizeLong() const {
          const MatchStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:odds.MatchStateRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int32 recentRuns = 6;
            {
              total_size +=
                  ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
                      this_._internal_recentruns(), 1,
                      this_._impl_._recentruns_cached_byte_size_);
            }
            // map<string, double> bowlerImpact = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_bowlerimpact_size());
              for (const auto& entry : this_._internal_bowlerimpact()) {
                total_size += _pbi::MapEntryFuncs<std::string, double,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // int32 innings = 1;
            if (this_._internal_innings() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_innings());
            }
            // int32 targetScore = 2;
            if (this_._internal_targetscore() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_targetscore());
            }
            // int32 currentScore = 3;
            if (this_._internal_currentscore() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_currentscore());
            }
            // int32 wicketsLeft = 4;
            if (this_._internal_wicketsleft() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_wicketsleft());
            }
            // double pitchModifier = 8;
            if (::absl::bit_cast<::uint64_t>(this_._internal_pitchmodifier()) != 0) {
              total_size += 9;
            }
            // int32 ballsRemaining = 5;
            if (this_._internal_ballsremaining() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ballsremaining());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MatchStateRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MatchStateRequest*>(&to_msg);
  auto& from = static_cast<const MatchStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:odds.MatchStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_recentruns()->MergeFrom(from._internal_recentruns());
  _this->_impl_.bowlerimpact_.MergeFrom(from._impl_.bowlerimpact_);
  if (from._internal_innings() != 0) {
    _this->_impl_.innings_ = from._impl_.innings_;
  }
  if (from._internal_targetscore() != 0) {
    _this->_impl_.targetscore_ = from._impl_.targetscore_;
  }
  if (from._internal_currentscore() != 0) {
    _this->_impl_.currentscore_ = from._impl_.currentscore_;
  }
  if (from._internal_wicketsleft() != 0) {
    _this->_impl_.wicketsleft_ = from._impl_.wicketsleft_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_pitchmodifier()) != 0) {
    _this->_impl_.pitchmodifier_ = from._impl_.pitchmodifier_;
  }
  if (from._internal_ballsremaining() != 0) {
    _this->_impl_.ballsremaining_ = from._impl_.ballsremaining_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MatchStateRequest::CopyFrom(const MatchStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odds.MatchStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MatchStateRequest::InternalSwap(MatchStateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.recentruns_.InternalSwap(&other->_impl_.recentruns_);
  _impl_.bowlerimpact_.InternalSwap(&other->_impl_.bowlerimpact_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.ballsremaining_)
      + sizeof(MatchStateRequest::_impl_.ballsremaining_)
      - PROTOBUF_FIELD_OFFSET(MatchStateRequest, _impl_.innings_)>(
          reinterpret_cast<char*>(&_impl_.innings_),
          reinterpret_cast<char*>(&other->_impl_.innings_));
}

::google::protobuf::Metadata MatchStateRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OddsResponse::_Internal {
 public:
};

OddsResponse::OddsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odds.OddsResponse)
}
OddsResponse::OddsResponse(
    ::google::protobuf::Arena* arena, const OddsResponse& from)
    : OddsResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE OddsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OddsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.winprobability_ = {};
}
OddsResponse::~OddsResponse() {
  // @@protoc_insertion_point(destructor:odds.OddsResponse)
  SharedDtor(*this);
}
inline void OddsResponse::SharedDtor(MessageLite& self) {
  OddsResponse& this_ = static_cast<OddsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* OddsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OddsResponse(arena);
}
constexpr auto OddsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OddsResponse),
                                            alignof(OddsResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OddsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OddsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OddsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OddsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OddsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OddsResponse>(), &OddsResponse::ByteSizeLong,
            &OddsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OddsResponse, _impl_._cached_size_),
        false,
    },
    &OddsResponse::kDescriptorMethods,
    &descriptor_table_odds_5fengine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OddsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> OddsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odds::OddsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double winProbability = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(OddsResponse, _impl_.winprobability_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double winProbability = 1;
    {PROTOBUF_FIELD_OFFSET(OddsResponse, _impl_.winprobability_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void OddsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:odds.OddsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.winprobability_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OddsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OddsResponse& this_ = static_cast<const OddsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OddsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OddsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:odds.OddsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double winProbability = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_winprobability()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_winprobability(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:odds.OddsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OddsResponse::ByteSizeLong(const MessageLite& base) {
          const OddsResponse& this_ = static_cast<const OddsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OddsResponse::ByteSizeLong() const {
          const OddsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:odds.OddsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double winProbability = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_winprobability()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OddsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OddsResponse*>(&to_msg);
  auto& from = static_cast<const OddsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:odds.OddsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_winprobability()) != 0) {
    _this->_impl_.winprobability_ = from._impl_.winprobability_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OddsResponse::CopyFrom(const OddsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odds.OddsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OddsResponse::InternalSwap(OddsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.winprobability_, other->_impl_.winprobability_);
}

::google::protobuf::Metadata OddsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BetRequest::_Internal {
 public:
};

BetRequest::BetRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:odds.BetRequest)
}
inline PROTOBUF_NDEBUG_INLINE BetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::odds::BetRequest& from_msg)
      : userid_(arena, from.userid_),
        market_(arena, from.market_),
        _cached_size_{0} {}

BetRequest::BetRequest(
    ::google::protobuf::Arena* arena,
    const BetRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stake_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, stake_),
           offsetof(Impl_, odds_) -
               offsetof(Impl_, stake_) +
               sizeof(Impl_::odds_));

  // @@protoc_insertion_point(copy_constructor:odds.BetRequest)
}
inline PROTOBUF_NDEBUG_INLINE BetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : userid_(arena),
        market_(arena),
        _cached_size_{0} {}

inline void BetRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stake_),
           0,
           offsetof(Impl_, odds_) -
               offsetof(Impl_, stake_) +
               sizeof(Impl_::odds_));
}
BetRequest::~BetRequest() {
  // @@protoc_insertion_point(destructor:odds.BetRequest)
  SharedDtor(*this);
}
inline void BetRequest::SharedDtor(MessageLite& self) {
  BetRequest& this_ = static_cast<BetRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.userid_.Destroy();
  this_._impl_.market_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BetRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BetRequest(arena);
}
constexpr auto BetRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BetRequest),
                                            alignof(BetRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BetRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BetRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BetRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BetRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BetRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BetRequest>(), &BetRequest::ByteSizeLong,
            &BetRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BetRequest, _impl_._cached_size_),
        false,
    },
    &BetRequest::kDescriptorMethods,
    &descriptor_table_odds_5fengine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BetRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 36, 2> BetRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::odds::BetRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string market = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.market_)}},
    // string userId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.userid_)}},
    // double stake = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.stake_)}},
    // double odds = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.odds_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string userId = 1;
    {PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.userid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double stake = 2;
    {PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.stake_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double odds = 3;
    {PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.odds_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string market = 4;
    {PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.market_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\6\0\0\6\0\0\0"
    "odds.BetRequest"
    "userId"
    "market"
  }},
};

PROTOBUF_NOINLINE void BetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:odds.BetRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userid_.ClearToEmpty();
  _impl_.market_.ClearToEmpty();
  ::memset(&_impl_.stake_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.odds_) -
      reinterpret_cast<char*>(&_impl_.stake_)) + sizeof(_impl_.odds_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BetRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BetRequest& this_ = static_cast<const BetRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BetRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BetRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:odds.BetRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string userId = 1;
          if (!this_._internal_userid().empty()) {
            const std::string& _s = this_._internal_userid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "odds.BetRequest.userId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // double stake = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_stake()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_stake(), target);
          }

          // double odds = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_odds()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_odds(), target);
          }

          // string market = 4;
          if (!this_._internal_market().empty()) {
            const std::string& _s = this_._internal_market();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "odds.BetRequest.market");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:odds.BetRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BetRequest::ByteSizeLong(const MessageLite& base) {
          const BetRequest& this_ = static_cast<const BetRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BetRequest::ByteSizeLong() const {
          const BetRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:odds.BetRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string userId = 1;
            if (!this_._internal_userid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_userid());
            }
            // string market = 4;
            if (!this_._internal_market().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_market());
            }
            // double stake = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_stake()) != 0) {
              total_size += 9;
            }
            // double odds = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_odds()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BetRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BetRequest*>(&to_msg);
  auto& from = static_cast<const BetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:odds.BetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_userid().empty()) {
    _this->_internal_set_userid(from._internal_userid());
  }
  if (!from._internal_market().empty()) {
    _this->_internal_set_market(from._internal_market());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_stake()) != 0) {
    _this->_impl_.stake_ = from._impl_.stake_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_odds()) != 0) {
    _this->_impl_.odds_ = from._impl_.odds_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BetRequest::CopyFrom(const BetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:odds.BetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BetRequest::InternalSwap(BetRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userid_, &other->_impl_.userid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_, &other->_impl_.market_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.odds_)
      + sizeof(BetRequest::_impl_.odds_)
      - PROTOBUF_FIELD_OFFSET(BetRequest, _impl_.stake_)>(
          reinterpret_cast<char*>(&_impl_.stake_),
          reinterpret_cast<char*>(&other->_impl_.stake_));
}

::google::protobuf::Metadata BetRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace odds
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_odds_5fengine_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
